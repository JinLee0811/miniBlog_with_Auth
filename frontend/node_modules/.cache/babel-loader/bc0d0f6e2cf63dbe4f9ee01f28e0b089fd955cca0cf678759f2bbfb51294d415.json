{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjin/Downloads/01-starting-project 4/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from \"react\";\nimport { useRouteLoaderData, redirect, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { getAuthToken } from \"../util/auth\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw Response.json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n    //   status: 500,\n    // });\n    throw Response.json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n\n  // 병렬적으로 데이터 로드\n  const [event, events] = await Promise.all([loadEvent(id),\n  // 특정 이벤트 로드\n  loadEvents() // 모든 이벤트 로드\n  ]);\n  return {\n    event,\n    events\n  };\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const token = getAuthToken();\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw Response.json({\n      message: \"Could not delete event.\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Suspense","useRouteLoaderData","redirect","Await","EventItem","EventsList","getAuthToken","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadedEvents","_c","loadEvent","id","response","fetch","ok","Response","json","message","status","resData","loadEvents","loader","request","params","eventId","Promise","all","action","token","method","headers","Authorization","$RefreshReg$"],"sources":["/Users/jeongjin/Downloads/01-starting-project 4/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { Suspense } from \"react\";\nimport { useRouteLoaderData, redirect, Await } from \"react-router-dom\";\n\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { getAuthToken } from \"../util/auth\";\n\nfunction EventDetailPage() {\n  const { event, events } = useRouteLoaderData(\"event-detail\");\n\n  return (\n    <>\n      <Suspense fallback={<p style={{ textAlign: \"center\" }}>Loading...</p>}>\n        <Await resolve={event}>{(loadedEvent) => <EventItem event={loadedEvent} />}</Await>\n      </Suspense>\n      <Suspense fallback={<p style={{ textAlign: \"center\" }}>Loading...</p>}>\n        <Await resolve={events}>{(loadedEvents) => <EventsList events={loadedEvents} />}</Await>\n      </Suspense>\n    </>\n  );\n}\n\nexport default EventDetailPage;\n\nasync function loadEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n\n  if (!response.ok) {\n    throw Response.json(\n      { message: \"Could not fetch details for selected event.\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\n\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n    //   status: 500,\n    // });\n    throw Response.json(\n      { message: \"Could not fetch events.\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n\n  // 병렬적으로 데이터 로드\n  const [event, events] = await Promise.all([\n    loadEvent(id), // 특정 이벤트 로드\n    loadEvents(), // 모든 이벤트 로드\n  ]);\n\n  return {\n    event,\n    events,\n  };\n}\n\nexport async function action({ params, request }) {\n  const eventId = params.eventId;\n  const token = getAuthToken();\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method,\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  if (!response.ok) {\n    throw Response.json(\n      { message: \"Could not delete event.\" },\n      {\n        status: 500,\n      }\n    );\n  }\n  return redirect(\"/events\");\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}